{"version":3,"sources":["webpack:///webpack/bootstrap d4fba4ca990230966286","webpack:///./src/webdev-genstack/helpers/index.ts","webpack:///./src/sculpt/src/lib/defs/index.ts","webpack:///external \"path\"","webpack:///./src/sculpt/src/lib/defs/helpers.ts","webpack:///./src/sculpt/src/lib/types.ts","webpack:///./src/sculpt/src/lib/validate.ts","webpack:///./src/utils/log.ts","webpack:///external \"lodash\"","webpack:///external \"prettier\"","webpack:///./src/sculpt/src/cmd/main.ts","webpack:///./src/sculpt/src/cmd/helpers.ts","webpack:///./src/sculpt/src/lib/generate.ts","webpack:///./src/sculpt/src/lib/helpers.ts","webpack:///./src/sculpt/src/lib/index.ts","webpack:///./src/sculpt/src/lib/writers/fileWrapperWriter.ts","webpack:///./src/sculpt/src/lib/writers/index.ts","webpack:///./src/utils/is.ts","webpack:///./src/webdev-genstack/helpers/tsHelpers.ts","webpack:///./src/webdev-genstack/writers/index.ts","webpack:///./src/webdev-genstack/writers/tsActionTestWriter.ts","webpack:///./src/webdev-genstack/writers/tsActionWriter.ts","webpack:///./src/webdev-genstack/writers/tsDefWriter.ts","webpack:///./src/webdev-genstack/writers/tsMockWriter.ts","webpack:///./src/webdev-genstack/writers/tsReducerTestWriter.ts","webpack:///./src/webdev-genstack/writers/tsTypeWriter.ts","webpack:///external \"es6-promisify\"","webpack:///external \"fs\"","webpack:///external \"jsonschema\"","webpack:///external \"minimist\"","webpack:///external \"mkdirp\"","webpack:///external \"strip-json-comments\""],"names":[],"mappings":"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","file":"sculpt.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 31);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d4fba4ca990230966286","export * from '$utils/is';\nexport * from '$sculpt/defs/helpers';\nexport * from './tsHelpers';\n\n\n\n// WEBPACK FOOTER //\n// ./src/webdev-genstack/helpers/index.ts","export * from './helpers';\nexport * from './types';\n\n\n\n// WEBPACK FOOTER //\n// ./src/sculpt/src/lib/defs/index.ts","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 2\n// module chunks = 0","import {last} from 'lodash';\n\nimport {AppDef, SchemaDefinition} from './types';\n\n// TODO is hacky, should probably follow relative path on def tree.\nexport const extractRefTypeTitle = ($ref: string): string =>\n  last($ref.split('/')) || '';\n\nexport const lookupDef = (d: AppDef, $ref: string): SchemaDefinition =>\n  d.definitions[extractRefTypeTitle($ref)];\n\nexport const getActions = (d: AppDef): SchemaDefinition[] =>\n  (d.definitions.Action.oneOf as any).map((a: any) =>\n    lookupDef(d, a.$ref || ''),\n  );\n\n// TODO check recursively\n// export const inheritsFrom = ($ref: string) => (\n//   d: SchemaDefinition,\n// ): boolean => !!d.allOf && d.allOf.some(a => a.$ref === $ref);\n\n\n\n// WEBPACK FOOTER //\n// ./src/sculpt/src/lib/defs/helpers.ts","import {AppDef} from './defs/types';\n\nexport interface GenCtx {\n  defPath: string;\n  def: AppDef;\n  prettierCfg: object;\n  outputDir: string;\n  stack: string;\n}\n\nexport interface GennedFileData {\n  path: string;\n  contents: string;\n  writerName: string;\n}\n\nexport interface WriterResults {\n  files: GennedFileData[];\n}\n\nexport const getDefaultResultsData = (): WriterResults => ({\n  files: [],\n});\n\n// writers are reducers, pure functions that return results after applying some action context\nexport interface Writer {\n  (results: WriterResults, ctx: GenCtx): WriterResults;\n  name: string; // writers are named functions so we get some free meta data\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/sculpt/src/lib/types.ts","import {last} from 'lodash';\n\nimport {Writer, WriterResults} from './types';\n\nexport const validateWriters = (writers: Writer[]): void => {\n  for (const w of writers) {\n    if (!w.name) {\n      throw new Error(\n        `Expected writer(${w}) to have a name prop - try exporting it as a named function`,\n      );\n    }\n  }\n};\n\nexport const validateResults = (results: WriterResults): void => {\n  for (const f of results.files) {\n    if ((last(f.path.split('/')) || '').indexOf('.gen.') === -1) {\n      throw new Error(\n        `Expected file path ${f.path} from ${f.writerName} to have \".gen.\"`,\n      );\n    }\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/sculpt/src/lib/validate.ts","// Simple logger that should work in any env (not preferred for any of them, though)\nexport const logger = (tag: string) => (...args: any[]): void => {\n  if (process.env.NODE_ENV === 'test') return;\n  args.unshift(`[${tag}]`);\n  console.log.apply(console, args);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/log.ts","module.exports = require(\"lodash\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash\"\n// module id = 7\n// module chunks = 0","module.exports = require(\"prettier\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"prettier\"\n// module id = 8\n// module chunks = 0","import * as fp from 'path';\nimport * as jsonschema from 'jsonschema';\nimport * as minimist from 'minimist';\nimport * as prettier from 'prettier';\n\nimport {GenCtx, generate} from '../lib';\nimport {loadCommentedJson, log, saveFile} from './helpers';\n\nimport {Writer} from '../lib/types';\n// TODO this is a hack, we should be dynamically importing these\nimport {writers} from '$webdev-genstack/writers';\n\nfunction printUsage(): void {\n  // TODO read from package.json\n  const version = '0.0.0';\n  const usage = `\nsculpt ${version} - next generation generation\nusage: sculpt [options] dir\n\noptions:\n  ?, help         Shows this screen\n  output-dir      Output directory\n  stack           Name of stack to use\n`;\n\n  console.log(usage);\n}\n\n/**\n * Parses CLI args.\n *\n * More info: https://github.com/substack/minimist\n */\nfunction parseArgs(): minimist.ParsedArgs {\n  const defaults = {\n    stack: '$webdev-genstack',\n    defFile: 'app.def.json',\n  };\n  const optionAliases = {\n    defFile: ['f', 'def-file'],\n    verbose: ['v'],\n  };\n  const treatAsBools = ['help', 'verbose'];\n\n  const argv = minimist(process.argv.slice(2), {\n    alias: optionAliases,\n    boolean: treatAsBools,\n    default: defaults,\n  });\n\n  if (argv.help) {\n    printUsage();\n    process.exit(0);\n  }\n\n  // the sole argument is the directory containing app schema\n  const dir = argv._[0] ? argv._[0] : process.env.cwd();\n  argv.workingDir = fp.resolve(dir);\n\n  console.log('argv', JSON.stringify(argv, null, 2));\n  return argv;\n}\n\nconst argv = parseArgs();\n\nasync function buildContext(): Promise<GenCtx> {\n  // TODO config/env\n  const appDefPath = fp.join(argv.workingDir, argv.defFile);\n\n  // TODO not sure if this should be part of GenCtx and this will break\n  // since it assumes sculpt is running at dbslate project root\n  const prettierCfgPath = 'config/prettier.json';\n\n  const prettierCfg = await loadCommentedJson(prettierCfgPath);\n\n  // Load the app definition and generate some code\n  const ctx = {\n    defPath: appDefPath,\n    def: await loadCommentedJson(appDefPath),\n    prettierCfg,\n    outputDir: fp.join(argv.workingDir, '_sculpted'),\n    stack: argv.stack,\n  };\n\n  validate(ctx);\n  return ctx;\n}\n\nfunction printInfo(ctx: GenCtx): void {\n  log('🗲 gen');\n  log('app source', ctx.defPath);\n  log('__dirname', __dirname);\n  log('__filename', __filename, fp.join(__dirname, ctx.defPath));\n}\n\nasync function validate(ctx: GenCtx): Promise<void> {\n  // This validation step is not very useful at the moment,\n  // but it can be expanded to better validate the definition file\n  // by editing the `baseSchema` JSON file directly.\n  const baseSchemaPath = fp.resolve(__dirname, '../lib/defs/jsonschema-meta.json');\n  const baseSchema = await loadCommentedJson(baseSchemaPath);\n  const validatorResult = jsonschema.validate(ctx.def, baseSchema);\n  if (validatorResult.errors.length) {\n    throw new Error(`Validator error: ${validatorResult.errors[0]}`);\n  }\n}\n\n// The list of writers determines what gets written to the results data\nasync function getWritersList(ctx: GenCtx): Promise<Writer[]> {\n  // TODO this should import from compiled stack, we're jumping through hoops\n  // to work with dirs as-is\n  // console.log('ctx.stack', ctx.stack);\n  // const {writers} = await import(ctx.stack);\n\n  return writers();\n}\n\nasync function main(): Promise<void> {\n  const ctx = await buildContext();\n  printInfo(ctx);\n\n  const writers = await getWritersList(ctx);\n\n  // `gen.generate` is a pure function - is does not perform any io actions or mutate anything external\n  const resultsData = generate(ctx, writers);\n\n  // write the results to the file system, to fit expected programmer workflow\n  for (const file of resultsData.files) {\n    let finalContents = file.contents;\n    try {\n      finalContents = prettier.format(file.contents, ctx.prettierCfg);\n    } catch (err) {\n      log(`failed to prettify, saving unprettified version: ${err}`);\n    }\n    saveFile(file.path, finalContents);\n  }\n\n  // all done\n  log('✔ gen');\n}\n\nmain().catch(err => {\n  log('err', err);\n  throw err;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/sculpt/src/cmd/main.ts","import * as fp from 'path';\nimport * as fs from 'fs';\nimport * as mkdirp from 'mkdirp';\nimport * as promisify from 'es6-promisify';\nimport * as stripJsonComments from 'strip-json-comments';\n\nimport {logger} from '$utils/log';\n\n// TODO this is expected to run only in node.. do something to enforce that or something\n\n// TODO doesn't get the correct type, had to manually add\nconst readFile: (path: string, options: {encoding: 'utf8'}) => Promise<string> = promisify(\n  fs.readFile\n);\n\nexport const loadCommentedJson = async (path: string): Promise<any> => {\n  console.log('loadCommentedJson:path', path);\n  const contents = await readFile(path, {encoding: 'utf8'});\n  const stripped = stripJsonComments(contents);\n  const parsed = JSON.parse(stripped);\n  return parsed;\n};\n\nexport function saveFile(filename: string, contents: string): void {\n  log('saving', filename);\n  // ensure dir exists\n  mkdirp.sync(fp.dirname(filename));\n  fs.writeFileSync(filename, contents, {\n    encoding: 'utf8',\n  });\n  log('saved~', filename);\n}\n\nexport const log = logger('task:gen');\n\n\n\n// WEBPACK FOOTER //\n// ./src/sculpt/src/cmd/helpers.ts","import {GenCtx, Writer, WriterResults, getDefaultResultsData} from './types';\nimport {validateResults, validateWriters} from './validate';\n\nimport {logger} from '$utils/log';\n\nconst log = logger('gen');\n\n// TODO consider making this async, or at least allowing writers to use promises\n// Writers are reducers, pure functions that return state as a function of,\n// in this case, `Writers`. They can return whatever results at their stage of the pipeline.\nexport const generate = (ctx: GenCtx, writers: Writer[]): WriterResults => {\n  validateWriters(writers);\n  return writers.reduce((results, writer) => {\n    log('writing', undefined, writer.name); // TODO the undefined smells\n    const writerResults = writer(results, ctx);\n    validateResults(writerResults);\n    // TODO could diff results\n    log('wrote~~', undefined, writer.name); // TODO the undefined smells\n    return writerResults;\n  }, getDefaultResultsData());\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/sculpt/src/lib/generate.ts","import {GennedFileData} from './types';\n\nexport const isJs = (file: GennedFileData): boolean => !!file.path.match(/^.+\\.js$/g);\n\nexport const isTs = (file: GennedFileData): boolean => !!file.path.match(/^.+\\.(ts|tsx)$/g);\n\nexport const isJsLike = (file: GennedFileData): boolean => !!file.path.match(/^.+\\.(js|ts|tsx)$/g);\n\nexport const renderOpenMultilineComment = (file: GennedFileData): string =>\n  isJsLike(file) ? '/*' : '/*';\n\nexport const renderCloseMultilineComment = (file: GennedFileData): string =>\n  isJsLike(file) ? '*/' : '*/';\n\nexport const renderComment = (file: GennedFileData, contents: string): string =>\n  `\n${renderOpenMultilineComment(file)}\n${contents}\n${renderCloseMultilineComment(file)}\n  `.trim();\n\n\n\n// WEBPACK FOOTER //\n// ./src/sculpt/src/lib/helpers.ts","export * from './defs';\nexport * from './generate';\nexport * from './types';\nexport * from './validate';\n\nimport * as fp from 'path';\n\n//// TODO should be discovered\n\n// user's working project dir\nexport const userProjectDir = () => fp.resolve(__dirname, '../_userProject');\n\n// TODO this should be package name not path\n// user's chosen gen stack\n//export const userStack = () => '$webdev-genstack';\n//export const userStack = () => '$webdev-genstack';\n\n// path to gen package dir which contains/*.def.json\nexport const genPackageDir = () => '../../src/gen';\n\n\n\n// WEBPACK FOOTER //\n// ./src/sculpt/src/lib/index.ts","import * as h from '../helpers';\n\nimport {GenCtx, GennedFileData, WriterResults} from '../types';\n\nexport const writeFileContents = (ctx: GenCtx, file: GennedFileData): string => {\n  const header = h.renderComment(\n    file,\n    `\n~!! WARNING !!~\n~!! This is an auto-generated file.\n~!! All edits will be lost!\n\n${ctx.defPath}\n    |> ${file.writerName}\n    |> ${file.path}\n\n~!! This is an auto-generated file.\n~!! All edits will be lost!\n~!! WARNING !!~\n  `.trim(),\n  );\n  const footer = header;\n\n  return `\n${header}\n\n${file.contents}\n\n${footer}\n  `.trim();\n};\n\nexport function fileWrapperWriter(results: WriterResults, ctx: GenCtx): WriterResults {\n  return {\n    ...results,\n    files: results.files.map(f => ({\n      ...f,\n      contents: writeFileContents(ctx, f),\n    })),\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/sculpt/src/lib/writers/fileWrapperWriter.ts","export * from './fileWrapperWriter';\n\n\n\n// WEBPACK FOOTER //\n// ./src/sculpt/src/lib/writers/index.ts","/*\n`is` is useful for assertions, like in switch case default blocks, eg:\n    switch (foo) {\n      cases...\n      default: is<never>(foo); // compile-time exhaustivity checking! if only there was pattern matching.\n    }\n*/\nexport const is = <T>(a: T): T => a;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/is.ts","import * as h from '../helpers';\n\nimport {SchemaDefinition, SchemaProperty, extractRefTypeTitle} from '$sculpt/defs';\n\n/*\n\nThis code is really rough - it's a bunch of helpers for TypeScript code generation.\nIt needs a lot more features and clarity of design.\nMost of it should probably be made more generic over the file type and moved to `./helpers.ts.\n\n*/\n\nexport const primitiveTypes = ['string', 'number', 'boolean', 'null', 'undefined', 'object', 'any'];\n\nexport function renderQmark(prop: SchemaProperty, propName: string): '' | '?' {\n  return prop.required && prop.required.includes(propName) ? '' : '?';\n}\n\nexport function renderArrayType(prop: SchemaProperty): string {\n  return prop.items && prop.items.$ref ? extractRefTypeTitle(prop.items.$ref) : ''; // TODO this is a huge hack\n}\n\nexport function renderTypeUnion(prop: SchemaProperty, refTypePrefix: string = 't.'): string {\n  return prop.oneOf ? prop.oneOf.map(v => renderPropertyType(v, refTypePrefix)).join(' | ') : '';\n}\n\nexport function renderEnumType(\n  prop: SchemaProperty,\n  refTypePrefix: string = 't.',\n  isDeclaration: boolean = false\n): string {\n  if (!prop.enum) {\n    return '';\n  }\n  if (!prop.title) {\n    return prop.enum.map(v => `'${v}'`).join(' | ');\n  }\n  if (isDeclaration) {\n    return `\n      {\n        ${prop.enum.map(v => `${v}`).join(',\\n')}\n      }\n    `.trim();\n  }\n  return `${refTypePrefix}${prop.title}`;\n}\n\nexport function renderEnumTypeUnion(prop: SchemaProperty): string {\n  return prop.enum ? prop.enum.map(v => `'${v}'`).join(' | ') : '';\n}\n\nexport function renderEnumValues(prop: SchemaProperty, refTypePrefix: string = 't.'): string {\n  return prop.enum\n    ? prop.enum.map(v => (prop.title ? `${refTypePrefix}${prop.title}.${v}` : `'${v}'`)).join(', ')\n    : '';\n}\n\nexport function renderPrimitivePropertyType(prop: SchemaProperty): string {\n  if (prop.type === 'object') {\n    // return prop.type;\n    return `\n      {\n        ${renderPropList(prop, undefined, '', renderPropertyPairNameToType)}\n      }\n    `;\n  } else {\n    return prop.type || '';\n  }\n}\n\nexport function renderPropertyType(\n  prop: SchemaProperty,\n  refTypePrefix: string = 't.',\n  isDeclaration: boolean = false\n): string {\n  if (prop.$ref) {\n    return prop.value !== undefined // TODO could replace all of this branching with a switch() over a declarative kind\n      ? `${refTypePrefix}${extractRefTypeTitle(prop.$ref)}.${prop.value}`\n      : `${refTypePrefix}${extractRefTypeTitle(prop.$ref)}`;\n  } else if (prop.value !== undefined) {\n    return `${JSON.stringify(prop.value)}`;\n  } else if (prop.type && primitiveTypes.includes(prop.type)) {\n    return renderPrimitivePropertyType(prop);\n  } else if (prop.type === 'array') {\n    return `${renderArrayType(prop)}[]`;\n  } else if (prop.oneOf) {\n    return renderTypeUnion(prop, refTypePrefix);\n  } else if (prop.enum) {\n    return renderEnumType(prop, refTypePrefix, isDeclaration);\n  } else {\n    return `'${prop.type}'`;\n  }\n}\n\nexport function renderInterfaceExtendType(\n  prop: SchemaProperty,\n  refTypePrefix: string = 't.',\n  isDeclaration: boolean = false\n): string {\n  return prop.allOf\n    ? `extends ${prop.allOf\n        .map(p => renderPropertyType(p, refTypePrefix, isDeclaration))\n        .join(', ')}`\n    : '';\n}\n\nexport function renderRandomValue(prop: SchemaProperty, refTypePrefix: string = 't.'): string {\n  // TODO huge temp hack ...wait that's everything, and it's not temp at all\n  if (prop.properties) {\n    return `\n      {\n        ${renderPropList(prop)}\n      }\n    `.trim();\n  } else if (prop.$ref) {\n    return prop.value !== undefined\n      ? `${refTypePrefix}${h.extractRefTypeTitle(prop.$ref)}.${prop.value}` // TODO this is hardcoded for enums, or namespacing at least\n      : `${refTypePrefix}mock${extractRefTypeTitle(prop.$ref)}()`; // TODO hmm? could do this at gen-time\n  } else if (prop.value !== undefined) {\n    return typeof prop.value === 'string' ? `'${prop.value}'` : JSON.stringify(prop.value);\n  } else if (prop.oneOf) {\n    return `sample([${prop.oneOf\n      .map(p => renderRandomValue(p, refTypePrefix))\n      .join(', ')}]) as ${prop.title ? `${refTypePrefix}${prop.title}` : renderTypeUnion(prop)}`; // TODO is hack to get around string literal problem from sample\n  } else if (prop.enum) {\n    return `sample([${renderEnumValues(prop)}]) as ${renderEnumType(prop)}`; // TODO is hack to get around string literal problem from sample\n  } else {\n    switch (prop.type) {\n      case 'string':\n        return prop.title === 'Id' ? 'rand.id()' : 'rand.str()'; // TODO refactor\n      case 'integer':\n        return 'rand.int()';\n      case 'number':\n        return 'rand.num()';\n      case 'object':\n        return `{}`;\n      case 'null':\n        return 'null';\n      case 'boolean':\n        return 'sample([true, false]) as boolean';\n      case 'array':\n        return `[]`;\n      default:\n        return `'FIXMEtype:${prop.type}'`;\n    }\n  }\n}\n\nexport function renderPropertyPairNameToValue(\n  prop: SchemaProperty,\n  propName: string,\n  parentProp: SchemaProperty,\n  refTypePrefix: string = 't.'\n): string {\n  return `${propName}: ${renderRandomValue(prop, refTypePrefix)}`;\n}\n\nexport function renderPropertyPairNameToType(\n  prop: SchemaProperty,\n  propName: string,\n  parentProp: SchemaProperty,\n  refTypePrefix: string = 't.'\n): string {\n  return `${propName}${renderQmark(parentProp, propName)}: ${renderPropertyType(\n    prop,\n    refTypePrefix\n  )}`;\n}\n\nexport function renderCallingArgs(\n  prop: SchemaProperty,\n  propName: string,\n  parentProp: SchemaProperty,\n  refTypePrefix: string = 't.'\n): string {\n  return renderRandomValue(prop, refTypePrefix);\n}\n\n// TODO callingPropList vs declarationPropList\nexport function renderPropList(\n  prop: SchemaProperty,\n  separator: string = ',\\n',\n  refTypePrefix: string = 't.',\n  fn: typeof renderPropertyPairNameToValue = renderPropertyPairNameToValue\n): string {\n  return prop.properties\n    ? Object.keys(prop.properties)\n        .map(propName =>\n          // tslint:disable-next-line:no-non-null-assertion\n          fn(prop.properties![propName], propName, prop, refTypePrefix)\n        )\n        .filter(p => p)\n        .join(separator)\n    : '';\n}\n\nexport enum TypeDeclarationKind {\n  TypeLiteral,\n  Enum,\n  Interface,\n}\n\n// TODO makes me think `SchemaProperty` should be a union type, instead of inferring it\nexport const inferTypeDeclarationKind = (definition: SchemaDefinition): TypeDeclarationKind => {\n  if (\n    definition.oneOf ||\n    (definition.type && definition.type !== 'array' && definition.type !== 'object')\n  ) {\n    return TypeDeclarationKind.TypeLiteral;\n  } else if (definition.enum) {\n    return TypeDeclarationKind.Enum;\n  } else {\n    return TypeDeclarationKind.Interface;\n  }\n};\n\nexport function renderTypeDeclaration(definition: SchemaDefinition): string {\n  // TODO this should be a helper\n  const typeDeclarationKind = inferTypeDeclarationKind(definition);\n  switch (typeDeclarationKind) {\n    case TypeDeclarationKind.TypeLiteral:\n      return `\n        export type ${definition.title} = ${renderPropertyType(definition, '')};\n      `.trim();\n    case TypeDeclarationKind.Enum:\n      return `\n        export enum ${definition.title}${renderPropertyType(definition, '', true)};\n      `.trim();\n    case TypeDeclarationKind.Interface:\n      return `\n        export interface ${definition.title} ${renderInterfaceExtendType(definition, '', false)} {\n          ${renderPropList(definition, ';\\n', '', renderPropertyPairNameToType)}\n        }\n      `.trim();\n    default:\n      h.is<never>(typeDeclarationKind);\n      throw Error();\n  }\n}\n\nexport function renderActionCreatorCall(\n  def: SchemaDefinition,\n  refTypePrefix: string = 't.'\n): string {\n  return `\n  ${refTypePrefix}${renderActionCreatorName(def)}(\n    ${renderPropList(\n      (def.properties && def.properties.payload) || {},\n      undefined,\n      refTypePrefix,\n      renderCallingArgs\n    )}\n  )\n  `.trim();\n}\n\nexport function renderPropertiesObjectLiteral(\n  prop: SchemaProperty,\n  separator: string = ',\\n'\n): string {\n  return prop.type === 'object'\n    ? `\n      {\n        ${(prop.properties && Object.keys(prop.properties).join(separator)) || ''}\n      }\n      `.trim()\n    : 'null';\n}\n\nconst ACTION_SUFFIX = 'Action';\nconst ACTION_SUFFIX_LENGTH = ACTION_SUFFIX.length;\n\nexport function renderActionCreatorName(def: SchemaDefinition): string {\n  return def.title[0].toLowerCase() + def.title.slice(1, def.title.length - ACTION_SUFFIX_LENGTH);\n}\n\nexport function renderActionTypeValue(def: SchemaDefinition, refTypePrefix: string = 't.'): string {\n  return `${refTypePrefix}${def.title}`;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/webdev-genstack/helpers/tsHelpers.ts","import {Writer} from '$sculpt/types';\nimport {fileWrapperWriter} from '$sculpt/writers';\nimport {tsActionTestWriter} from './tsActionTestWriter';\nimport {tsActionWriter} from './tsActionWriter';\nimport {tsDefWriter} from './tsDefWriter';\nimport {tsMockWriter} from './tsMockWriter';\nimport {tsReducerTestWriter} from './tsReducerTestWriter';\nimport {tsTypeWriter} from './tsTypeWriter';\n\nexport const writers = (): Writer[] => [\n  tsDefWriter,\n  tsTypeWriter,\n  tsMockWriter,\n  tsActionWriter,\n  tsActionTestWriter,\n  tsReducerTestWriter,\n  fileWrapperWriter,\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/webdev-genstack/writers/index.ts","import * as h from '../helpers';\n\nimport {AppDef, getActions} from '$sculpt/defs';\nimport {GenCtx, WriterResults} from '$sculpt/types';\n\nconst writeContents = (path: string, def: AppDef, results: WriterResults): string =>\n  `\n    // TODO make these tests more robust - like with snapshot testing\n\n    import * as rand from '$utils/rand';\n    import * as u from '$utils/is';\n    import * as a from './actions.gen';\n    import * as t from './types.gen';\n\n    ${getActions(def)\n      .map(a =>\n        `\n        it('calls the ${a.title} creator', () => {\n          const action = ${h.renderActionCreatorCall(a, 'a.')};\n          u.is<${h.renderActionTypeValue(a, 't.')}>(action);\n        });\n        `.trim()\n      )\n      .join('\\n\\n')}\n  `.trim();\n\nexport function tsActionTestWriter(results: WriterResults, ctx: GenCtx): WriterResults {\n  const path = `${ctx.outputDir}/actions.gen.test.ts`;\n  return {\n    ...results,\n    files: results.files.concat({\n      path,\n      contents: writeContents(path, ctx.def, results),\n      writerName: tsActionTestWriter.name,\n    }),\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/webdev-genstack/writers/tsActionTestWriter.ts","import * as h from '../helpers';\n\nimport {AppDef, SchemaProperty, getActions} from '$sculpt/defs';\nimport {GenCtx, WriterResults} from '$sculpt/types';\n\n// TODO should probably be renamed\nconst writeContents = (def: AppDef): string =>\n  `\n  import * as t from './types.gen';\n\n  ${getActions(def)\n    .map(a =>\n      `\n      export const ${h.renderActionCreatorName(a)} = (\n        ${h.renderPropList(\n          (a.properties && a.properties.payload) || {},\n          undefined,\n          undefined,\n          (prop: SchemaProperty, propName: string, parentProp: SchemaProperty): string =>\n            propName === 'type' ? '' : h.renderPropertyPairNameToType(prop, propName, parentProp)\n        )}\n      ): t.${a.title} => ({\n        type: t.ActionType.${a.title},\n        ${a.properties && a.properties.payload\n          ? `payload: ${h.renderPropertiesObjectLiteral(a.properties.payload)},`\n          : ''}\n      })\n      `.trim()\n    )\n    .join('\\n\\n')}\n\n  `.trim();\n\nexport function tsActionWriter(results: WriterResults, ctx: GenCtx): WriterResults {\n  const path = `${ctx.outputDir}/actions.gen.ts`;\n  return {\n    ...results,\n    files: results.files.concat({\n      path,\n      contents: writeContents(ctx.def),\n      writerName: tsActionWriter.name,\n    }),\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/webdev-genstack/writers/tsActionWriter.ts","import * as h from '../helpers';\nimport * as prettier from 'prettier';\n\nimport {GenCtx, WriterResults} from '$sculpt/types';\n\nimport {AppDef} from '$sculpt/defs';\n\nconst writeContents = (def: AppDef, prettierCfg: object): string =>\n  `\n  import {AppDef} from '$sculpt';\n\n  export const ${def.name}Def: AppDef = {\n    ${Object.keys(def).map(d => {\n      if (d === 'definitions') {\n        return `\n          ${d}: {\n              ${Object.keys(def[d]).map(\n                defName => `\n                    ${defName}: ${JSON.stringify(\n                  {\n                    ...def[d][defName],\n                    code: {\n                      declaration: prettier.format(\n                        h.renderTypeDeclaration(def.definitions[defName]),\n                        prettierCfg\n                      ),\n                    },\n                    title: defName,\n                  },\n                  null,\n                  2\n                )}\n              `\n              )}\n          }\n            `;\n      } else {\n        return `${d}: ${JSON.stringify(def[d], null, 2)}`;\n      }\n    })}\n  };\n  `.trim();\n\nexport function tsDefWriter(results: WriterResults, ctx: GenCtx): WriterResults {\n  const path = `${ctx.outputDir}/def.gen.ts`;\n  return {\n    ...results,\n    files: results.files.concat({\n      path,\n      contents: writeContents(ctx.def, ctx.prettierCfg),\n      writerName: tsDefWriter.name,\n    }),\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/webdev-genstack/writers/tsDefWriter.ts","import * as h from '../helpers';\n\nimport {GenCtx, WriterResults} from '$sculpt/types';\n\nimport {AppDef} from '$sculpt/defs';\n\nconst writeContents = (path: string, def: AppDef, results: WriterResults): string =>\n  `\n  import {sample} from 'lodash';\n\n  import * as t from './types.gen';\n\n  ${Object.keys(def.definitions)\n    .map(d => {\n      const definition = def.definitions[d];\n      return `\n        export const mock${definition.title} = (): t.${d} => (\n          ${h.renderRandomValue(definition)}\n        );\n      `.trim();\n    })\n    .join('\\n\\n')}\n  `.trim();\n\nexport function tsMockWriter(results: WriterResults, ctx: GenCtx): WriterResults {\n  const path = `${ctx.outputDir}/mocks.gen.ts`;\n  return {\n    ...results,\n    files: results.files.concat({\n      path,\n      contents: writeContents(path, ctx.def, results),\n      writerName: tsMockWriter.name,\n    }),\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/webdev-genstack/writers/tsMockWriter.ts","import * as h from '../helpers';\n\nimport {AppDef, getActions} from '$sculpt/defs';\nimport {GenCtx, WriterResults} from '$sculpt/types';\n\nconst writeContents = (path: string, def: AppDef, results: WriterResults): string =>\n  `\n    // TODO make these tests more robust - like with snapshot testing\n    // problem is snapshot testing doesn't play nicely with ids\n\n    import * as rand from '$utils/rand';\n    import * as t from './types.gen';\n\n    import {reducer} from './index';\n\n    ${getActions(def)\n      .map(a =>\n        `\n        it('applies a ${a.title} against the store state', () => {\n          const state = reducer(undefined, ${h.renderActionCreatorCall(a)});\n          t.is<t.ClientState>(state);\n        });\n        `.trim()\n      )\n      .join('\\n\\n')}\n  `.trim();\n\nexport function tsReducerTestWriter(results: WriterResults, ctx: GenCtx): WriterResults {\n  const path = `${ctx.outputDir}/reducer.gen.test.ts`;\n  return {\n    ...results,\n    files: results.files.concat({\n      path,\n      contents: writeContents(path, ctx.def, results),\n      writerName: tsReducerTestWriter.name,\n    }),\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/webdev-genstack/writers/tsReducerTestWriter.ts","import * as h from '../helpers';\n\nimport {GenCtx, WriterResults} from '$sculpt/types';\n\nimport {AppDef} from '$sculpt/defs';\n\nconst writeContents = (path: string, def: AppDef, results: WriterResults): string =>\n  `\n  ${Object.keys(def.definitions).map(d => h.renderTypeDeclaration(def.definitions[d])).join('\\n\\n')}\n  `.trim();\n\nexport function tsTypeWriter(results: WriterResults, ctx: GenCtx): WriterResults {\n  const path = `${ctx.outputDir}/types.gen.ts`;\n  return {\n    ...results,\n    files: results.files.concat({\n      path,\n      contents: writeContents(path, ctx.def, results),\n      writerName: tsTypeWriter.name,\n    }),\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/webdev-genstack/writers/tsTypeWriter.ts","module.exports = require(\"es6-promisify\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"es6-promisify\"\n// module id = 25\n// module chunks = 0","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 26\n// module chunks = 0","module.exports = require(\"jsonschema\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jsonschema\"\n// module id = 27\n// module chunks = 0","module.exports = require(\"minimist\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"minimist\"\n// module id = 28\n// module chunks = 0","module.exports = require(\"mkdirp\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mkdirp\"\n// module id = 29\n// module chunks = 0","module.exports = require(\"strip-json-comments\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"strip-json-comments\"\n// module id = 30\n// module chunks = 0"],"sourceRoot":""}